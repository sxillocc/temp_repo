package com.collections;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;

class Items{
	private int i1;
	private Integer i2;
	private String i3;
	public int getI1() {
		return i1;
	}
	public void setI1(int i1) {
		this.i1 = i1;
	}
	public Integer getI2() {
		return i2;
	}
	public void setI2(Integer i2) {
		this.i2 = i2;
	}
	public String getI3() {
		return i3;
	}
	public void setI3(String i3) {
		this.i3 = i3;
	}
	
	public Items(int i, Integer i2, String i3) {
		i1 = i;
		this.i2 = i2;
		this.i3 = i3;
	}
	
}

class sortByPrimitiveInt implements Comparator<Items>{

	@Override
	public int compare(Items o1, Items o2) {
		// TODO Auto-generated method stub
		return o1.getI1() - o2.getI1();
	}
	
}

class sortByInteger implements Comparator<Items>{

	@Override
	public int compare(Items o1, Items o2) {
		// TODO Auto-generated method stub
		return o1.getI2().compareTo(o2.getI2());
	}
	
}

class sortByString implements Comparator<Items>{

	@Override
	public int compare(Items o1, Items o2) {
		// TODO Auto-generated method stub
		return o1.getI3().compareTo(o2.getI3());
	}
	
}

class Order implements Comparable<Order>{
	
	private Integer orderId;
	private String orderBy;
	public Order(Integer orderId, String orderBy) {
		this.orderId = orderId;
		this.orderBy = orderBy;
	}
	
	@Override
	public int compareTo(Order o) {
		// TODO Auto-generated method stub
		int ans = 0;
		if(this.orderId<o.orderId)
			ans = -1;
		else if(this.orderId == o.orderId)
			ans = 0;
		else
			ans = 1;
		return ans;
	}

	public Integer getOrderId() {
		return orderId;
	}

	public void setOrderId(Integer orderId) {
		this.orderId = orderId;
	}

	public String getOrderBy() {
		return orderBy;
	}

	public void setOrderBy(String orderBy) {
		this.orderBy = orderBy;
	}
	
	

	
}

public class ComparatorExample {
	public static void main(String[] args) {
		ArrayList<Order> o = new ArrayList<Order>();
		o.add(new Order(5,"Five"));
		o.add(new Order(2, "Two"));
		o.add(new Order(1, "One"));
		o.add(new Order(3, "Three"));
		o.add(new Order(4, "Four"));
		
		
		Collections.sort(o);
		
		for(int i=0; i<o.size(); i++) {
			System.out.println(o.get(i).getOrderId());
		}
	}
}
